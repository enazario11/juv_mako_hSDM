---
title: "Mako hSDM BRT preliminary results"
author: "Emily Nazario"
date: "`r Sys.Date()`"
format:
 html: 
  self-contained: true
editor: visual
toc: TRUE
toc-title: "On this page"
theme: yeti
fontcolor: "#134f5c"
code-block-bg: true
---

# Study hypotheses and objectives

**H1:** The AGI model will perform better than the dissolved oxygen and null model, and the dissolved oxygen model will perform better than the null model.

*study objective being met:* Which model performs the best and presents the best predictions (i.e., best predictive performance scores, most ecologically realistic suitability maps)?

**H2:** The inclusion of dissolved oxygen at deeper depths will result in better/more ecologically realistic habitat suitability predictions relative to the dissolved oxygen model considering surface values alone.

*study objective being met:* How does dissolved oxygen at different depths influence habitat suitability predictions relative to oxygen at the surface?

**H3:** The inclusion of the AGI at deeper depths will result in better/more ecologically realistic habitat suitability predictions relative to the AGI model considering surface values alone.

*study objective being met:* How does the aerobic growth index (AGI; environmental oxygen supply:theoretical oxygen demand) at different depths influence habitat suitability predictions relative to the aerobic growth index at the surface?

**H4:** There will be important relationships between dissolved oxygen/the AGI and latitude/distance to coast.

*study objective being met:* Are there any important relationships between dissolved oxygen or AGI at the surface or at depth and latitude or distance to the coast?

**H5:** The null model will predict higher habitat suitability in areas or during seasons or periods (upwelling or La Ni√±a) with lower dissolved oxygen through the water column relative to the dissolved oxygen and AGI models.

*study objective being met:* How do the habitat suitability maps differ between the models? How do these variations compare for different points in time?

```{r}
#| label: libraries and data
#| echo: false
#| warning: false
#| message: false
#| include: false

#libraries
library(tidyverse)
library(gbm)
library(dismo)
library(here)
library(terra)
library(sf)
library(tidyterra)
library(here);here <- here::here #plyr's here function masks here::here
library(tidyquant)
library(lessR)
library(rstatix)
library(ggpubr)

set.seed(1004)

source(here("functions/BRT_evaluation_functions.R"))
source(here("functions/brt_explore_quarto_function.R"))
source(here("functions/hsi_rast_functions.R"))

# CRW outputs and data -------------------------------------------------------
brt_outputs_crw <- list.files(here("data/brt/mod_outputs/crw"), full.names = TRUE, pattern = ".rds")

#load test datasets
base_test_daily_crw <- readRDS(here("data/brt/mod_eval/base_test_daily.rds"))
base_test_seasonal_crw <- readRDS(here("data/brt/mod_eval/base_test_seasonal.rds"))
base_test_annual_crw <- readRDS(here("data/brt/mod_eval/base_test_annual.rds"))

do_test_daily_crw <- readRDS(here("data/brt/mod_eval/do_test_daily.rds"))
agi_test_daily_crw <- readRDS(here("data/brt/mod_eval/agi_test_daily.rds"))

do_test_daily_seasonal_annual_crw <- readRDS(here("data/brt/mod_eval/do_test_daily_seasonal_annual.rds"))
agi_test_daily_seasonal_annual_crw <- readRDS(here("data/brt/mod_eval/agi_test_daily_seasonal_annual.rds"))

dat_test_do_agi_all <- readRDS(here("data/brt/mod_eval/agi_do_test_daily_seasonal_annual.rds"))

# Background outputs and data ----------------------------------------------
brt_outputs_back <- list.files(here("data/brt/mod_outputs/background"), full.names = TRUE, pattern = ".rds")

#load test datasets
base_test_daily_back <- readRDS(here("data/brt/mod_eval/back/base_test_daily.rds"))
base_test_seasonal_back <- readRDS(here("data/brt/mod_eval/back/base_test_seasonal.rds"))
base_test_annual_back <- readRDS(here("data/brt/mod_eval/back/base_test_annual.rds"))

do_test_daily_back <- readRDS(here("data/brt/mod_eval/back/do_test_daily.rds"))
agi_test_daily_back <- readRDS(here("data/brt/mod_eval/back/agi_test_daily.rds"))

do_test_daily_seasonal_annual_back <- readRDS(here("data/brt/mod_eval/back/do_test_daily_seasonal_annual.rds"))
agi_test_daily_seasonal_annual_back <- readRDS(here("data/brt/mod_eval/back/agi_test_daily_seasonal_annual.rds"))

```

# Model summaries

::: panel-tabset
## Base model - crw

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = brt_outputs_crw[7], 
            test_data = base_test_daily_crw)
```

## Base model - back

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = brt_outputs_back[7], 
            test_data = base_test_daily_back)
```

## AGI overfit - crw

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/crw/refined/brt_agi_0m_60m_250m_dail_seas_ann_no_wind.rds",
            test_data = agi_test_daily_seasonal_annual_crw)

```

## DO overfit - crw

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/crw/refined/brt_do_0m_60m_250m_dail_seas_ann_no_wind.rds",
            test_data = do_test_daily_seasonal_annual_crw)

```

## AGI overfit - back

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/background/refined/brt_agi_0m_60m_250m_dail_seas_ann_no_wind.rds",
            test_data = agi_test_daily_seasonal_annual_back)

```

## DO overfit - back

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/background/refined/brt_do_0m_60m_250m_dail_seas_ann_no_wind.rds",
            test_data = do_test_daily_seasonal_annual_back)

```

## DO/AGI Combo 

Here, dissolved oxygen was included at 0m and at all temporal resolutions, while AGI was included at 250m and all temporal resolutions. 
```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/crw/refined/brt_agi_250_DO_0_dail_seas_ann.rds",
            test_data = dat_test_do_agi_all)

```

## DO/AGI Ensemble

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

#load do final model 
agi_mod <- readRDS(here("data/brt/mod_outputs/crw/ensemble/brt_agi_only.rds"))
do_mod <- readRDS(here("data/brt/mod_outputs/crw/ensemble/brt_do_final.rds"))

# make df of predictions from each model
test_ensemble_df <- readRDS(here("data/brt/mod_eval/agi_do_test_daily_seasonal_annual.rds"))

pred_testdata <- data.frame(
  do = predict.gbm(do_mod, test_ensemble_df,
                   n.trees = do_mod$gbm.call$best.trees,
                   type = "response"),
  agi = predict.gbm(agi_mod, test_ensemble_df,
                    n.trees = agi_mod$gbm.call$best.trees,
                    type = "response")
)

# Mean of probabilities
mean_prob <- rowMeans(pred_testdata)

# performance measures for "mean of probabilities"
(perf_mean_prob <- mecofun::evalSDM(test_ensemble_df$PA, mean_prob))

#calculate percent external deviance explained
ext.residual.deviance <- calc.deviance(obs = test_ensemble_df$PA, pred=mean_prob, family="bernoulli", calc.mean=TRUE) #get % deviance
null.dev =  calc.deviance(test_ensemble_df$PA ,rep(mean(test_ensemble_df$PA),length(test_ensemble_df$PA)), family="bernoulli", calc.mean=T)
(dev=(null.dev - ext.residual.deviance)/null.dev) 

```


## AGI final - crw

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/crw/refined/brt_agi_0m_250m_dail_seas_ann.rds",
            test_data = agi_test_daily_seasonal_annual_crw)

```

## DO final - crw

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/crw/refined/brt_do_0m_250m_dail_seas_ann.rds",
            test_data = do_test_daily_seasonal_annual_crw)

```

## AGI final - back

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/background/refined/brt_agi_0m_250m_dail_seas_ann.rds",
            test_data = agi_test_daily_seasonal_annual_back)

```

## DO final - back

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/background/refined/brt_do_0m_250m_dail_seas_ann.rds",
            test_data = do_test_daily_seasonal_annual_back)

```
:::

# Summary table of model performance metrics

```{r}
#| echo: false

output_sum <- read.csv(here("data/brt/mod_outputs/brt_prelim_results.csv"))
kableExtra::kable(output_sum)
```

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 10
#| echo: false

ggplot(output_sum, aes(AUC, TSS, color = deviance_exp, label = model)) +
  geom_point(size = 5) +
  xlab('AUC') +
  ylab('TSS') +
  scale_color_gradientn(colors = MetBrewer::met.brewer("Greek")) +
  ggrepel::geom_label_repel(aes(label = model),
                  box.padding   = 0.35,
                  point.padding = 1,
                  segment.color = 'grey50',
                  max.overlaps = 40,
                  label.size = 0.5)+
  theme_minimal()+
  theme(legend.position = "right")

```

## Conclusions

-   Based on the above comparisons between models using PAs from CRW and background sampling approaches, I have decided to move forward using the CRW PA models. The background sampling models consistently indicated that they were overfit, and thus the CRW models are the preferred choice.

-   Given the similar values among performance metrics between the overfit models (those with all depth levels and temporal resolutions) and the models without data at 60m, we have selected the latter to be the final study models. We explored similar models without data at 60m and at a seasonal temporal resolution, but these models performed considerably worse. Additionally, DO and AGI at 0m and 250m at a seasonal resolution were often a predictor variable with a top 5 highest relative importance, thus, keeping data at a seasonal resolution seemed valuable.

# Final models w/o random predictor variables

::: panel-tabset
## Base model

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/final_mods/brt_base_0m_dail_no_wind.rds",
            test_data = base_test_daily_crw)

```

## DO overfit model

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/final_mods/brt_do_0m_60m_250m_dail_seas_ann_no_wind.rds",
            test_data = do_test_daily_seasonal_annual_crw)

```

## AGI overfit model

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/final_mods/brt_agi_0m_60m_250m_dail_seas_ann_no_wind.rds",
            test_data = agi_test_daily_seasonal_annual_crw)

```

## DO final model

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/final_mods/brt_do_0m_250m_dail_seas_ann.rds",
            test_data = do_test_daily_seasonal_annual_crw)

```

## AGI final model

```{r}
#| warning: false
#| fig-width: 12
#| fig-height: 10

explore_brt(mod_file_path = "data/brt/mod_outputs/final_mods/brt_agi_0m_250m_dail_seas_ann.rds",
            test_data = agi_test_daily_seasonal_annual_crw)

```
:::

# HSI maps

```{r}
#| echo: false
#| warning: false
#| include: false

#list models
base_mod <- readRDS(here("data/brt/mod_outputs/final_mods/brt_base_0m_dail_no_wind.rds"))
do_mod_of <- readRDS(here("data/brt/mod_outputs/final_mods/brt_do_0m_60m_250m_dail_seas_ann_no_wind.rds"))
do_mod_fin <- readRDS(here("data/brt/mod_outputs/final_mods/brt_do_0m_250m_dail_seas_ann.rds"))
agi_mod_of <- readRDS(here("data/brt/mod_outputs/final_mods/brt_agi_0m_60m_250m_dail_seas_ann_no_wind.rds"))
agi_mod_fin <- readRDS(here("data/brt/mod_outputs/final_mods/brt_agi_0m_250m_dail_seas_ann.rds"))
agi_mod_back <- readRDS(here("data/brt/mod_outputs/final_mods/brt_agi_0m_250m_dail_seas_ann_back.rds"))
do_agi_comb <- readRDS(here("data/brt/mod_outputs/final_mods/brt_agi_250_DO_0_dail_seas_ann.rds"))

#ensemble model 
agi_mod <- readRDS(here("data/brt/mod_outputs/crw/ensemble/brt_agi_only.rds"))
do_mod <- readRDS(here("data/brt/mod_outputs/crw/ensemble/brt_do_final.rds"))

# make df of predictions from each model
test_ensemble_df <- readRDS(here("data/brt/mod_eval/agi_do_test_daily_seasonal_annual.rds"))

pred_testdata <- data.frame(
  do = predict.gbm(do_mod, test_ensemble_df,
                   n.trees = do_mod$gbm.call$best.trees,
                   type = "response"),
  agi = predict.gbm(agi_mod, test_ensemble_df,
                    n.trees = agi_mod$gbm.call$best.trees,
                    type = "response")
)

# Mean of probabilities
do_agi_ensemb <- rowMeans(pred_testdata)

```

::: panel-tabset
## Average across study period

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen(date_start = c("2003-01-01"), date_end = c("2015-12-31"), season = "WSpSuF", output_name = "Jan03_Dec15")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan03_Dec15")

```

## Average by ENSO phase

These dates run from January to December of each year, but I am happy to modify this if there are better ways to categorize/plot ENSO phases.

### Neutral year (2013)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen(date_start = c("2013-01-01"), date_end = c("2013-12-31"), season = "WSpSuF", output_name = "Jan13_Dec13")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan13_Dec13")

```

### Strong La Ni√±a year (-1.5 to -1.9 temperature anomaly; 2011)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen(date_start = c("2011-01-01"), date_end = c("2011-12-31"), season = "WSpSuF", output_name = "Jan11_Dec11")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan11_Dec11")

```

### Moderate/strong El Ni√±o year (1.5 to 1.9 temperature anomaly; 2009)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen(date_start = c("2009-01-01"), date_end = c("2009-12-31"), season = "WSpSuF", output_name = "Jan09_Dec09")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan09_Dec09")

```

## Models by ENSO phase

### Base model

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

  #neutral map
base_rast_neut <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan13_Dec13/Jan13_Dec13_base_rast.nc"))
names(base_rast_neut) <- c("bathy_mean", "temp_mean", "sal_mean", "chl_mean", "ssh_mean", "bathy_sd", "mld_mean")
  
extent <- c(-153, -103, 1 , 49)

base_pred_neut <- predict(base_rast_neut, base_mod, type = "response", n.tress = base_mod$gbm.call$best.trees, na.rm = FALSE)
base_pred_neut <- crop(base_pred_neut, extent)

map.world = map_data(map="world")
testt = map.world %>% filter(long <= 180)
  
base_map_neut <- ggplot() +
    geom_spatraster(data = base_pred_neut) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("Neutral year (2013)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  #La Ni√±a
base_rast_la <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan11_Dec11/Jan11_Dec11_base_rast.nc"))
names(base_rast_la) <- c("bathy_mean", "temp_mean", "sal_mean", "chl_mean", "ssh_mean", "bathy_sd", "mld_mean")

base_pred_la <- predict(base_rast_la, base_mod, type = "response", n.tress = base_mod$gbm.call$best.trees, na.rm = FALSE)
base_pred_la <- crop(base_pred_la, extent)
  
base_map_la <- ggplot() +
    geom_spatraster(data = base_pred_la) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("La Ni√±a year (2011)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  #El Ni√±o
base_rast_el <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan09_Dec09/Jan09_Dec09_base_rast.nc"))
names(base_rast_el) <- c("bathy_mean", "temp_mean", "sal_mean", "chl_mean", "ssh_mean", "bathy_sd", "mld_mean")

base_pred_el <- predict(base_rast_el, base_mod, type = "response", n.tress = base_mod$gbm.call$best.trees, na.rm = FALSE)
base_pred_el <- crop(base_pred_el, extent)
  
base_map_el <- ggplot() +
    geom_spatraster(data = base_pred_el) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("El Ni√±o year (2009)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))

base_map_neut | base_map_la | base_map_el
  
```

### AGI model

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

  #neutral map
agi_rast_neut <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan13_Dec13/Jan13_Dec13_agi_rast.nc"))
names(agi_rast_neut) <- c("temp_mean", "AGI_250m_ann", "AGI_0m", "bathy_mean", "AGI_0m_seas", "sal_mean", "AGI_250m_seas", "AGI_0m_ann", "chl_mean", "AGI_250m", "bathy_sd", "mld_mean", "ssh_mean")
  
extent <- c(-153, -103, 1 , 49)

agi_pred_neut <- predict(agi_rast_neut, agi_mod_fin, type = "response", n.tress = agi_mod$gbm.call$best.trees, na.rm = FALSE)
agi_pred_neut <- crop(agi_pred_neut, extent)

map.world = map_data(map="world")
testt = map.world %>% filter(long <= 180)
  
agi_map_neut <- ggplot() +
    geom_spatraster(data = agi_pred_neut) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("Neutral year (2013)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  #La Ni√±a
agi_rast_la <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan11_Dec11/Jan11_Dec11_agi_rast.nc"))
names(agi_rast_la) <- c("temp_mean", "AGI_250m_ann", "AGI_0m", "bathy_mean", "AGI_0m_seas", "sal_mean", "AGI_250m_seas", "AGI_0m_ann", "chl_mean", "AGI_250m", "bathy_sd", "mld_mean", "ssh_mean")

agi_pred_la <- predict(agi_rast_la, agi_mod_fin, type = "response", n.tress = agi_mod$gbm.call$best.trees, na.rm = FALSE)
agi_pred_la <- crop(agi_pred_la, extent)
  
agi_map_la <- ggplot() +
    geom_spatraster(data = agi_pred_la) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("La Ni√±a year (2011)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  #El Ni√±o
agi_rast_el <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan09_Dec09/Jan09_Dec09_agi_rast.nc"))
names(agi_rast_el) <- c("temp_mean", "AGI_250m_ann", "AGI_0m", "bathy_mean", "AGI_0m_seas", "sal_mean", "AGI_250m_seas", "AGI_0m_ann", "chl_mean", "AGI_250m", "bathy_sd", "mld_mean", "ssh_mean")

agi_pred_el <- predict(agi_rast_el, agi_mod_fin, type = "response", n.tress = agi_mod$gbm.call$best.trees, na.rm = FALSE)
agi_pred_el <- crop(agi_pred_el, extent)
  
agi_map_el <- ggplot() +
    geom_spatraster(data = agi_pred_el) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("El Ni√±o year (2009)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))

agi_map_neut | agi_map_la | agi_map_el
```

### DO model

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

  #neutral map
do_rast_neut <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan13_Dec13/Jan13_Dec13_do_rast.nc"))
names(do_rast_neut) <- c("o2_mean_0m", "o2_mean_250m_ann", "o2_mean_0m_seas", "temp_mean", "o2_mean_250m_seas", "bathy_mean", "sal_mean", "chl_mean", "o2_mean_0m_ann", "o2_mean_250m", "ssh_mean", "mld_mean", "bathy_sd")
  
extent <- c(-153, -103, 1 , 49)

do_pred_neut <- predict(do_rast_neut, do_mod_fin, type = "response", n.tress = do_mod$gbm.call$best.trees, na.rm = FALSE)
do_pred_neut <- crop(do_pred_neut, extent)

map.world = map_data(map="world")
testt = map.world %>% filter(long <= 180)
  
do_map_neut <- ggplot() +
    geom_spatraster(data = do_pred_neut) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("Neutral year (2013)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  #La Ni√±a
do_rast_la <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan11_Dec11/Jan11_Dec11_do_rast.nc"))
names(do_rast_la) <- c("o2_mean_0m", "o2_mean_250m_ann", "o2_mean_0m_seas", "temp_mean", "o2_mean_250m_seas", "bathy_mean", "sal_mean", "chl_mean", "o2_mean_0m_ann", "o2_mean_250m", "ssh_mean", "mld_mean", "bathy_sd")

do_pred_la <- predict(do_rast_la, do_mod_fin, type = "response", n.tress = do_mod$gbm.call$best.trees, na.rm = FALSE)
do_pred_la <- crop(do_pred_la, extent)
  
do_map_la <- ggplot() +
    geom_spatraster(data = do_pred_la) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("La Ni√±a year (2011)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  #El Ni√±o
do_rast_el <- rast(here("data/enviro/psat_spot_all/hsi_rasts/Jan09_Dec09/Jan09_Dec09_do_rast.nc"))
names(do_rast_el) <- c("o2_mean_0m", "o2_mean_250m_ann", "o2_mean_0m_seas", "temp_mean", "o2_mean_250m_seas", "bathy_mean", "sal_mean", "chl_mean", "o2_mean_0m_ann", "o2_mean_250m", "ssh_mean", "mld_mean", "bathy_sd")

do_pred_el <- predict(do_rast_el, do_mod_fin, type = "response", n.tress = do_mod$gbm.call$best.trees, na.rm = FALSE)
do_pred_el <- crop(do_pred_el, extent)
  
do_map_el <- ggplot() +
    geom_spatraster(data = do_pred_el) +
    geom_map(data = testt,map = testt,aes(map_id = region, x = long, y = lat), fill = "grey75", color = "black") +
    scale_x_continuous(expand =c(0,0),limits = c(-153,-103)) +
    scale_y_continuous(expand=c(0,0),limits = c(1,49)) +
    scale_fill_whitebox_c(palette = "muted", direction = -1) +
    ggtitle("El Ni√±o year (2009)") +
    theme_map() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))

do_map_neut | do_map_la | do_map_el
```

## SD by ENSO phase

### Neutral year (2013)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen_sd(date_start = c("2013-01-01"), date_end = c("2013-12-31"), season = "WSpSuF", output_name = "Jan13_Dec13")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts_sd/Jan13_Dec13")

```

### Strong La Ni√±a year (-1.5 to -1.9 temperature anomaly; 2011)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen_sd(date_start = c("2011-01-01"), date_end = c("2011-12-31"), season = "WSpSuF", output_name = "Jan11_Dec11")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts_sd/Jan11_Dec11")
```

### Moderate/strong El Ni√±o year (1.5 to 1.9 temperature anomaly; 2009)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen_sd(date_start = c("2009-01-01"), date_end = c("2009-12-31"), season = "WSpSuF", output_name = "Jan09_Dec09")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts_sd/Jan09_Dec09")
```

## Random day (September 24, 2007)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 12

#hsi_rast_gen(date_start = c("2007-09-24"), date_end = c("2007-09-24"), season = "F", output_name = "Sept_24_2007")

hsi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Sept_24_2007")

```
:::

# HSI difference maps

::: panel-tabset
## Average across study period

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

hsi_diff_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan03_Dec15")

```

## Average by ENSO phase

### Neutral year (2013)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

hsi_diff_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan13_Dec13")

```

### Strong La Ni√±a year (-1.5 to -1.9 temperature anomaly; 2011)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

hsi_diff_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan11_Dec11")

```

### Moderate/strong El Ni√±o year (1.5 to 1.9 temperature anomaly; 2009)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

hsi_diff_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Jan09_Dec09")

```

## Random day (September 24, 2007)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

hsi_diff_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/Sept_24_2007")

```
:::

# AGI maps

::: panel-tabset
## Average across study period

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

agi_maps(rast_folder = "data/enviro/psat_spot_all/hsi_rasts/agi_rasts/Jan03_Dec15", get_rast = "Y")

```

## Average by season

### Winter

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

#load rasters 
rast_file_seas_0m <- rast(here("data/enviro/psat_spot_all/all_processed/season_res/dat_0m_season.nc"))
rast_file_seas_250m <- rast(here("data/enviro/psat_spot_all/all_processed/season_res/dat_250m_season.nc"))

#subset for winter
rast_seas_0m_subW <- subset(rast_file_seas_0m, month(time(rast_file_seas_0m)) == 12)
rast_seas_250m_subW <- subset(rast_file_seas_250m, month(time(rast_file_seas_250m)) == 12)

#create winter AGI raster
source(here("functions/oxy_demand_functions.R"))
OxyThresh_0m = 0.04928389 #value converted from Vetter concentration data to atm according to salinity, temp, and pressure at 0m
OxyThresh_250m = 0.03816138 #value converted from Vetter concentration data to atm according to salinity, temp, and pressure at 250m
Tpref = 16.45201 #mean temp experienced by sharks at mean dive depth (50m)
  
  #0m
demand_seas_0m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_0m, T_C = rast_seas_0m_subW$votemper_1)
atm_seas_0m <- rast_to_atm(do = rast_seas_0m_subW$o2_1, so = rast_seas_0m_subW$vosaline_1, temp = rast_seas_0m_subW$votemper_1, depth = 0)
AGI_W_0m <- atm_seas_0m/demand_seas_0m
  
  #250m
demand_seas_250m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_250m, T_C = rast_seas_250m_subW $votemper_1)
atm_seas_250m <- rast_to_atm(do = rast_seas_250m_subW $o2_1, so = rast_seas_250m_subW $vosaline_1, temp = rast_seas_250m_subW $votemper_1, depth = 250)
AGI_W_250m <- atm_seas_250m/demand_seas_250m
  
#plot
agi_maps(rast_folder = NULL, get_rast = "N", agi_0m_rast = AGI_W_0m, agi_250m_rast = AGI_W_250m)
```

### Spring

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

#subset for spring
rast_seas_0m_subSp <- subset(rast_file_seas_0m, month(time(rast_file_seas_0m)) == 3)
rast_seas_250m_subSp <- subset(rast_file_seas_250m, month(time(rast_file_seas_250m)) == 3)

#create spring AGI raster
  #0m
demand_seas_0m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_0m, T_C = rast_seas_0m_subSp$votemper_2)
atm_seas_0m <- rast_to_atm(do = rast_seas_0m_subSp$o2_2, so = rast_seas_0m_subSp$vosaline_2, temp = rast_seas_0m_subSp$votemper_2, depth = 0)
AGI_Sp_0m <- atm_seas_0m/demand_seas_0m
  
  #250m
demand_seas_250m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_250m, T_C = rast_seas_250m_subSp$votemper_2)
atm_seas_250m <- rast_to_atm(do = rast_seas_250m_subSp$o2_2, so = rast_seas_250m_subSp$vosaline_2, temp = rast_seas_250m_subSp$votemper_2, depth = 250)
AGI_Sp_250m <- atm_seas_250m/demand_seas_250m
  
#plot
agi_maps(rast_folder = NULL, get_rast = "N", agi_0m_rast = AGI_Sp_0m, agi_250m_rast = AGI_Sp_250m)

```

### Summer

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

#subset for summer
rast_seas_0m_subSu <- subset(rast_file_seas_0m, month(time(rast_file_seas_0m)) == 6)
rast_seas_250m_subSu <- subset(rast_file_seas_250m, month(time(rast_file_seas_250m)) == 6)

#create summer AGI raster
  #0m
demand_seas_0m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_0m, T_C = rast_seas_0m_subSu$votemper_3)
atm_seas_0m <- rast_to_atm(do = rast_seas_0m_subSu$o2_3, so = rast_seas_0m_subSu$vosaline_3, temp = rast_seas_0m_subSu$votemper_3, depth = 0)
AGI_Su_0m <- atm_seas_0m/demand_seas_0m
  
  #250m
demand_seas_250m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_250m, T_C = rast_seas_250m_subSu$votemper_3)
atm_seas_250m <- rast_to_atm(do = rast_seas_250m_subSu$o2_3, so = rast_seas_250m_subSu$vosaline_3, temp = rast_seas_250m_subSu$votemper_3, depth = 250)
AGI_Su_250m <- atm_seas_250m/demand_seas_250m
  
#plot
agi_maps(rast_folder = NULL, get_rast = "N", agi_0m_rast = AGI_Su_0m, agi_250m_rast = AGI_Su_250m)
```

### Fall

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

#subset for fall
rast_seas_0m_subF <- subset(rast_file_seas_0m, month(time(rast_file_seas_0m)) == 9)
rast_seas_250m_subF <- subset(rast_file_seas_250m, month(time(rast_file_seas_250m)) == 9)

#create fall AGI raster
  #0m
demand_seas_0m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_0m, T_C = rast_seas_0m_subF$votemper_4)
atm_seas_0m <- rast_to_atm(do = rast_seas_0m_subF$o2_4, so = rast_seas_0m_subF$vosaline_4, temp = rast_seas_0m_subF$votemper_4, depth = 0)
AGI_F_0m <- atm_seas_0m/demand_seas_0m
  
  #250m
demand_seas_250m <- OxyDemand(Tpref = Tpref, PO2_thresh = OxyThresh_250m, T_C = rast_seas_250m_subF$votemper_4)
atm_seas_250m <- rast_to_atm(do = rast_seas_250m_subF$o2_4, so = rast_seas_250m_subF$vosaline_4, temp = rast_seas_250m_subF$votemper_4, depth = 250)
AGI_F_250m <- atm_seas_250m/demand_seas_250m
  
#plot
agi_maps(get_rast = "N", agi_0m_rast = AGI_F_0m, agi_250m_rast = AGI_F_250m)

```

## Average by ENSO phase

### Neutral year (2013)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

agi_maps(get_rast = "Y", rast_folder = "data/enviro/psat_spot_all/hsi_rasts/agi_rasts/Jan13_Dec13")

```

### Strong La Ni√±a year (-1.5 to -1.9 temperature anomaly; 2011)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

agi_maps(get_rast = "Y", rast_folder = "data/enviro/psat_spot_all/hsi_rasts/agi_rasts/Jan11_Dec11")

```

### Moderate/strong El Ni√±o year (1.5 to 1.9 temperature anomaly; 2009)

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 10

agi_maps(get_rast = "Y", rast_folder = "data/enviro/psat_spot_all/hsi_rasts/agi_rasts/Jan09_Dec09")

```
:::

# Model evaluation

## Predictor variable relative importance

### Base model

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

base_inf <- as.data.frame(ggBRT::ggInfluence(base_mod, plot = FALSE)) %>% rownames_to_column()
colnames(base_inf) <- c("Predictor_variable", "relative_influence")

base_cols <- MetBrewer::met.brewer("Hokusai1", n = length(unique(base_inf$Predictor_variable)))

lessR::PieChart(x = Predictor_variable, y = relative_influence, data = base_inf, fill = base_cols, color = base_cols, main = NULL, quiet = TRUE, cex = 2, labes_size = 1.5) 

```

### DO model

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

do_inf <- as.data.frame(ggBRT::ggInfluence(do_mod_fin, plot = FALSE)) %>% rownames_to_column()
colnames(do_inf) <- c("Predictor_variable", "relative_influence")

do_cols <- MetBrewer::met.brewer("Hokusai1", n = length(unique(do_inf$Predictor_variable)))

lessR::PieChart(x = Predictor_variable, y = relative_influence, data = do_inf, fill = do_cols, color = do_cols,  main = NULL, quiet = TRUE, cex = 2, labes_size = 1.5) 

```

### AGI model

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

agi_inf <- as.data.frame(ggBRT::ggInfluence(agi_mod_fin, plot = FALSE)) %>% rownames_to_column()
colnames(agi_inf) <- c("Predictor_variable", "relative_influence")

agi_cols <- MetBrewer::met.brewer("Hokusai1", n = length(unique(agi_inf$Predictor_variable)))

lessR::PieChart(x = Predictor_variable, y = relative_influence, data = agi_inf, fill = agi_cols, color = agi_cols, main = NULL, quiet= TRUE, cex = 2, labes_size = 1.5) 

```

### DO, AGI model

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

do_agi_inf <- as.data.frame(ggBRT::ggInfluence(do_agi_comb, plot = FALSE)) %>% rownames_to_column()
colnames(do_agi_inf) <- c("Predictor_variable", "relative_influence")

comb_cols <- MetBrewer::met.brewer("Hokusai1", n = length(unique(do_agi_inf$Predictor_variable)))

lessR::PieChart(x = Predictor_variable, y = relative_influence, data = do_agi_inf, fill = comb_cols, color = comb_cols, main = NULL, quiet= TRUE, cex = 2, labes_size = 1.5) 

```

## Partial plots

### DO model

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5
#| include: false

par_plot_func <- function(x, vars, vars_type = NULL){
  
df_box <- list("vector", length(vars))
for (i in (1:length(vars))){
  df_box[[i]] <- treezy::partial_dependence(x, vars[[i]])
 }

df <- dplyr::bind_rows(df_box)

if(str_detect(vars_type, "o2_0m")){
  df <- df %>% 
    mutate(variable = as.factor(variable), 
           variable = fct_relevel(variable, c("o2_mean_0m", "o2_mean_0m_seas", "o2_mean_0m_ann")))
}
if(str_detect(vars_type, "o2_250m")){
  df <- df %>% 
    mutate(variable = as.factor(variable), 
           variable = fct_relevel(variable, c("o2_mean_250m", "o2_mean_250m_seas", "o2_mean_250m_ann")))
}
if(str_detect(vars_type, "AGI_0m")){
  df <- df %>% 
    mutate(variable = as.factor(variable), 
           variable = fct_relevel(variable, c("AGI_mean_0m", "AGI_mean_0m_seas", "AGI_mean_0m_ann")))
}
if(str_detect(vars_type, "AGI_250m")){
  df <- df %>% 
    mutate(variable = as.factor(variable), 
           variable = fct_relevel(variable, c("AGI_mean_250m", "AGI_mean_250m_seas", "AGI_mean_250m_ann")))
}

df_mean <-
    df %>%
    dplyr::group_by(variable) %>%
    dplyr::summarise(mean = mean(value))

par_plot <- ggplot(data = df, aes(x = value, y = fitted_function, color = variable)) + 
  geom_line(linewidth = 2)+
  labs(x = "Variable values", 
       y = "Model Predicted values") + 
  scale_color_manual(values = MetBrewer::met.brewer("Hokusai1", n = length(vars)))+
  theme_minimal()

return(par_plot)
}

```

#### 0m

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

par_plot_func(do_mod_fin, vars = c("o2_mean_0m", "o2_mean_0m_seas", "o2_mean_0m_ann"), vars_type = "o2_0m")

```

#### 250m

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5


par_plot_func(do_mod_fin, vars = c("o2_mean_250m", "o2_mean_250m_seas", "o2_mean_250m_ann"), vars_type = "o2_250m")

```

### AGI model

#### 0m

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

par_plot_func(agi_mod_fin, vars = c("AGI_0m", "AGI_0m_seas", "AGI_0m_ann"), vars_type = "AGI_0m")

```

#### 250m

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

par_plot_func(agi_mod_fin, vars = c("AGI_250m", "AGI_250m_seas", "AGI_250m_ann"), vars_type = "AGI_250m")

```

## Performance metric comparisons

Will later run models 20-50 times to get means and SDs in order to test significance between the values reported for each model type.

```{r}
#| echo: false
#| warning: false
#| fig-width: 12
#| fig-height: 5

mod_metrics <- output_sum %>% filter(model == "base_Nwind_crw" | model == "agi_0m_250m_dail_seas_ann_crw" | model == "do_0m_250m_dail_seas_ann_crw" | model == "do_agi_comb" | model == "do_agi_ensemble")

mod_metrics[1, "model"] <- "Base model"
mod_metrics[2,"model"] <- "AGI model"
mod_metrics[3,"model"] <- "DO model"
mod_metrics[4, "model"] <- "DO, AGI combo model"
mod_metrics[5, "model"] <- "DO, AGI ensemble model"

mod_metrics <- mod_metrics %>% mutate(model = as.factor(model), model = fct_relevel(model, c("Base model", "DO model", "AGI model")))

# stat.tss <- mod_metrics %>%
#   wilcox_test(TSS ~ model) %>%
#   adjust_pvalue(method = "bonferroni") %>%
#   add_significance("p.adj")
# stat.tss

TSS <- ggplot(mod_metrics, aes(x = model, y=TSS)) +
  geom_segment(aes(x=model, xend=model, y=0, yend=TSS), color="darkslategrey", linewidth = 1.5) +
  geom_point(color="orange", size=8) +
  theme_light() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("") +
  ylab("TSS") + 
  theme(axis.text = element_text(size = 12, angle = 45, hjust = 1),
        axis.title = element_text(size = 14))

AUC <- ggplot(mod_metrics, aes(x = model, y=AUC)) +
  geom_segment(aes(x=model, xend=model, y=0.6, yend=AUC), color="darkslategrey", linewidth = 1.5) +
  geom_point(color="orange", size=8) +
  theme_light() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("") +
  ylab("AUC") + 
  ylim(0.6, 1) +
  theme(axis.text = element_text(size = 12, angle = 45, hjust = 1),
        axis.title = element_text(size = 14))

perc_exp <- ggplot(mod_metrics, aes(x = model, y=deviance_exp*100)) +
  geom_segment(aes(x=model, xend=model, y=0, yend=deviance_exp*100), color="darkslategrey", linewidth = 1.5) +
  geom_point(color="orange", size=8) +
  theme_light() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("") +
  ylab("Deviance explained (%)") + 
  theme(axis.text = element_text(size = 12, angle = 45, hjust = 1),
        axis.title = element_text(size = 14))

TSS|AUC|perc_exp

```
